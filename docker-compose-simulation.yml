services:
  simulation-backend:
    image: mikechatzis/hackatumtsichallenge:backend
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      simulation-postgres:
        condition: service_healthy
    networks:
      - simulation
  simulation-runner:
    image: mikechatzis/hackatumtsichallenge:scenariorunner
    ports:
      - "8090:8090"
    restart: always
    depends_on:
      simulation-backend:
        condition: service_started
      simulation-frontend:
        condition: service_started
      simulation-postgres:
        condition: service_healthy
  simulation-postgres:
    image: postgres:13-alpine
    hostname: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tsi
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d tsi"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - simulation
  simulation-frontend:
    image: mikechatzis/hackatumtsichallenge:frontend
    ports:
      - "9000:9000"
    restart: always
    depends_on:
      simulation-backend:
        condition: service_started
networks:
  simulation:
    driver: bridge